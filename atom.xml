<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[OSv Blog]]></title>
  <link href="http://osv.io/blog/atom.xml" rel="self"/>
  <link href="http://osv.io/blog/"/>
  <updated>2015-03-04T14:10:34-08:00</updated>
  <id>http://osv.io/blog/</id>
  <author>
    <name><![CDATA[Cloudius Systems]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Seastar: New C++ Framework for Web-scale Workloads]]></title>
    <link href="http://osv.io/blog/blog/2015/02/20/seastar/"/>
    <updated>2015-02-20T06:54:23-08:00</updated>
    <id>http://osv.io/blog/blog/2015/02/20/seastar</id>
    <content type="html"><![CDATA[<p>Today, we are releasing Seastar, a new open-source C++
framework for extreme high-performance applications
on OSv and Linux. Seastar brings a 5x throughput
improvement to web-scale workloads, at millions of
transactions per second on a single server, and is
optimized for modern physical and virtual hardware.</p>

<p><img src="http://www.seastar-project.org/img/memcache.png" alt="seastar Memcache graph" /></p>

<p><em>Benchmark results are available from the <a href="http://www.seastar-project.org/">new Seastar
project site</a>.</em></p>

<p><strong>Today’s server hardware is <a href="http://danluu.com/new-cpu-features/">substantially different</a> from
the machines for which today’s server software
was written.</strong> Multi-core design and complex
caching now require us to make new assumptions to
get good performance.  And today’s more complex
workloads, where many microservices interact to
fulfil a single user request, are driving down the
latencies required at all layers of the stack. On
new hardware, the performance of standard workloads
depends more on locking and coordination across cores
than on performance of an individual core. And the
full-featured network stack of a conventional OS can
also use a majority of a server’s CPU cycles.</p>

<p><strong>Seastar reaches linear scalability,</strong> as a
function of core count, by taking a shard-per-core
approach. SeaStar tasks do not depend on synchronous
data exchange with other cores which is usually
implemented by compare-exchange and similar locking
schemes. Instead, each core owns its resources (RAM,
NIC queue, CPU) and exchanges async messages with
remote cores. Seastar includes its own user-space
network stack, which runs on top of <a href="http://dpdk.org/">Data Plane
Development Kit</a> (DPDK). All
network communications can take place without system
calls, and no data copying ever occurs. SeaStar is
event-driven and supports writing non-blocking,
asynchronous server code in a straightforward
manner that facilitates debugging and reasoning
about performance.</p>

<p>Seastar is currently focused on high-throughput,
low-latency network applications. For example,
it is useful for NoSQL servers, for data caches
such as memcached, and for high-performance HTTP
serving. Seastar is available today, under the Apache
license version 2.0.</p>

<ul>
<li><p><a href="http://www.seastar-project.org/">Seastar project site</a></p></li>
<li><p><a href="https://github.com/cloudius-systems/seastar">Seastar repository on GitHub</a></p></li>
<li><p><a href="https://groups.google.com/forum/?hl=en#!forum/seastar-dev">seastar-dev mailing list</a></p></li>
</ul>


<p><strong>Please follow
<a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a>
on Twitter for updates.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Researching the Future of the Cloud]]></title>
    <link href="http://osv.io/blog/blog/2015/02/02/mikelangelo/"/>
    <updated>2015-02-02T10:54:23-08:00</updated>
    <id>http://osv.io/blog/blog/2015/02/02/mikelangelo</id>
    <content type="html"><![CDATA[<p><strong>By Nadav Har&#8217;El</strong></p>

<p>What will the IaaS cloud of the future look like? How can we improve the
hypervisor to reduce the overhead it adds to virtual machines? How can we
improve the operating system on each VM to make it faster, smaller, and
more agile? How do we write applications that run more efficiently and
conveniently on the modern cloud? How can we run on the cloud applications
which traditionally required specialized hardware, such as supercomputers?</p>

<p><img src="http://osv.io/blog/images/mikelangelo.png" alt="Project Mikelangelo" /></p>

<p>Cloudius Systems, together with eight leading industry and university
partners, announced this month the <a href="http://mikelangelo.uni-goettingen.de/">Mikelangelo</a> research project, which
sets out to answer exactly these questions. Mikelangelo is funded by the
European Union&rsquo;s flagship research program, <a href="http://ec.europa.eu/programmes/horizon2020/">&ldquo;Horizon 2020&rdquo;</a>.</p>

<p>Cloudius Systems brings to this project two significant technologies:</p>

<p>The first is OSv, our efficient and light-weight operating-system kernel
optimized especially for VMs in the cloud. OSv can run existing Linux
applications, but often with significantly improved performance and lower
memory and disk footprint.</p>

<p>Our second contribution to the cloud of the future is Seastar, a new
framework for writing complex asynchronous applications while achieving
optimal performance on modern machines. Seastar could be used to write
the building blocks of modern user-facing cloud applications, such as
HTTP servers, object caches and NoSQL databases, with staggering
performance: Our prototype implementations already showed a 4-fold
increase in server throughput compared to the commonly used alternatives,
and linear scalability of performance on machines with up to 32 cores.</p>

<p>The other companies which joined us in the Mikelangelo project are
an exciting bunch, and include some ground-breaking European (and global)
cloud researchers and practicioners:</p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=148">Huawei</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=132">IBM</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=128">Intel</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=124">The University of Stuttgart&rsquo;s supercomputing center (HLRS)</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=108">The University of Goettingen&rsquo;s computing center (GWDG)</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=144">Ben Gurion University</a></p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=118">XLAB</a>, the coordinator of the project</p>

<p>&nbsp;&bull; <a href="http://mikelangelo.uni-goettingen.de/?page_id=136">Pipistrel</a>, a light aircraft manufacturer</p>

<p>Pipistrel&rsquo;s intended use case, of moving HPC jobs to the cloud, is
particularly interesting. Pipistrel is an innovative manufacturer of
light aircraft that holds <a href="http://www.pipistrel.si/media/achievements-and-awards">several cool world records</a>, and won NASA&rsquo;s
2011 &ldquo;Green Flight Challenge&rdquo; by building an all-electric airplane
achieving the equivalent of 400 miles per gallon per passenger.
The aircraft design process involves numerous heavy numerical
simulations. If a typical run requires 100 machines for two hours,
running it on the cloud means they would not need to own 100 machines,
and rather just pay for the computer time they use. Moreover, on the
cloud they could just as easily deploy 200 machines, and finish the
job in half the time, for exactly the same price!</p>

<p>Last week, researchers from all these partners met to kick off the
project, and also enjoyed a visit to Ljubljana which, as its name implies,
is a lovely city. The project will span 3 years, but we expect to see some
encouraging results from the project&mdash;and from the individual partners
comprising it&mdash;very soon. The future of the cloud looks very bright!</p>

<p><em><a href="http://mikelangelo-project.eu/">The Mikelangelo Project&rsquo;s official site</a> is coming soon.</em></p>

<p><strong>Watch this space (<a href="http://localhost:4000/blog/atom.xml">feed</a>), or follow
<a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a>
on Twitter, for more links to research in progress.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unikernel Research at the University of Utah]]></title>
    <link href="http://osv.io/blog/blog/2015/01/14/performance-evaluation/"/>
    <updated>2015-01-14T15:54:23-08:00</updated>
    <id>http://osv.io/blog/blog/2015/01/14/performance-evaluation</id>
    <content type="html"><![CDATA[<p>Ian Briggs, Matt Day, Eric Eide, Yuankai Guo, and
Peter Marheine are conducting performance research
on unikernels, and have thoughtfully posted some
preliminary work on OSv performance.</p>

<p>The team tested OSv for DNS and HTTP, and got some
encouraging results.</p>

<p><a href="http://osv.io/blog/images/http-server-benchmark.png"><img src="http://osv.io/blog/images/http-server-benchmark.png" alt="HTTP server comparison" /></a></p>

<p>The lighttpd web server on OSv performs consistently
well up through 5000 requests/second.  And on DNS
tests, Linux can sustain a response rate of about
19000 per second, while OSv can handle approximately 28000 requests per second, with slightly
lower latency.</p>

<p>The preliminary paper is
<a href="http://www.cs.utah.edu/~peterm/prelim-osv-performance.pdf">Performance Evaluation of OSv for Server
Applications</a>
(<a href="http://osv.io/blog/images/prelim-osv-performance.pdf">local copy</a>).</p>

<p>The researchers did run into a bug running OSv
on Xen, so we&rsquo;re all looking forward to helping
them track that down on the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing
list</a>.
In the meantime, watch this space, or follow
<a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a>
on Twitter, for more links to OS research in progress.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv Meetup Group in Bangalore, India]]></title>
    <link href="http://osv.io/blog/blog/2015/01/07/meetup/"/>
    <updated>2015-01-07T07:54:23-08:00</updated>
    <id>http://osv.io/blog/blog/2015/01/07/meetup</id>
    <content type="html"><![CDATA[<p>So far, OSv <a href="http://www.meetup.com/OSv-Developer-Meetup/">Meetups</a> have happened in Fremont and San Francisco, California, and Hertzeliya, Israel.  Next week, the Bangalore, India OSv Meetup is happening&mdash;details on the <a href="http://www.meetup.com/OSv-Developer-Meetup-Bangalore/">Bangalore Meetup page</a>.</p>

<p><img src="http://osv.io/blog/images/meetup.jpg" alt="attendees" />
<em>Attendees focus on building their applications on OSv in a California meetup last summer</em></p>

<p>The topic for the first meeting, on Sunday January 11, is an OSv code walkthrough.</p>

<p>To get advance notice of future events please join the (California-based) <a href="http://www.meetup.com/OSv-Developer-Meetup/">Meetup group</a> or the new
<a href="http://www.meetup.com/OSv-Developer-Meetup-Bangalore/">OSv Developer Meetup, Bangalore</a>.   For general info, you can follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Image Building Tip: Make Clean Without Repeating Yourself]]></title>
    <link href="http://osv.io/blog/blog/2014/12/16/make-clean-dont-repeat-yourself/"/>
    <updated>2014-12-16T21:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/12/16/make-clean-dont-repeat-yourself</id>
    <content type="html"><![CDATA[<p><strong>By Don Marti</strong></p>

<p>What do we have to do in <code>make clean</code>?  Delete all the files that can be regenerated that we don&rsquo;t need to keep around.</p>

<p>What&rsquo;s listed in <code>.gitignore</code>?  All the files that can be regenerated that we don&rsquo;t need to keep around.</p>

<p>Hey, wait a minute. It&rsquo;s not a good idea to repeat yourself, especially for me, since I have to &ldquo;start a project&rdquo; often for demo code.  So here&rsquo;s a way to keep track of all those extre files in one place, with a few lines in Makefile and one handy git command.</p>

<!--more-->


<p>Here&rsquo;s the new <code>clean</code> target:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Remove anything listed in the .gitignore file.
</span><span class='line'># Remove empty directories because they cannot be versioned.
</span><span class='line'>clean :
</span><span class='line'>        find . -path ./.git -prune -o -print0 | \
</span><span class='line'>        git check-ignore -z --stdin | xargs -0 rm -f
</span><span class='line'>        find . -depth -mindepth 1 -type d -print0 | \
</span><span class='line'>        xargs -0 rmdir --ignore-fail-on-non-empty</span></code></pre></td></tr></table></div></figure>


<p>In this case, we&rsquo;re just running a <code>find</code> on everything except the <code>.git</code> directory, and using the <a href="http://git-scm.com/docs/git-check-ignore">git check-ignore</a> command to see if they&rsquo;re ignorable by git.  If the answer is yes, then they&rsquo;re fine to remove&mdash;so no more keeping track of them in two places.</p>

<p>The second <code>find</code> is just to get rid of empty directories, which Git won&rsquo;t track anyway.  And the <code>-print0</code>, <code>-z</code>, and <code>-0</code> options in both lines are to use null characters between filenames, just to prevent weirdness if you end up with a file with a space in its name.</p>

<p>(To hook your regular Makefile up to build complete VMs, just use <a href="http://osv.io/capstan/">Capstan</a>. Get a complete VM, ready to run on any cloud, in only 7.5 to 9 seconds.)</p>

<h2>What, is that it?</h2>

<p>Fine, have a bonus tip.  If you&rsquo;re a fan of <a href="http://whatcolourisit.scn9a.org/">What colour is it</a>, the site that changes background color to match the current time, here&rsquo;s how to do the same thing on a GNOME desktop:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gsettings set org.gnome.desktop.background primary-color "#$(date +%H%M%S)"</span></code></pre></td></tr></table></div></figure>


<p>(Those of you on something other than Linux+GNOME, developer desktop tips for your setup are welcome.)</p>

<p><em>For more tips and OSv news, subscribe to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv on the QEMU Advent Calendar]]></title>
    <link href="http://osv.io/blog/blog/2014/12/11/advent/"/>
    <updated>2014-12-11T14:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/12/11/advent</id>
    <content type="html"><![CDATA[<p>OSv is on the <a href="http://www.qemu-advent-calendar.org/#day-11">QEMU Advent Calendar</a> with a ready-to-download VM image.</p>

<p><a href="http://www.qemu-advent-calendar.org/#day-11"><img src="http://osv.io/blog/images/day11.png" alt="day 11" /></a></p>

<p>Not just a demo, it&rsquo;s a fully functional Redis data store with a web management console that you can try with a real Redis application.   There are more fun projects on the QEMU Advent Calendar site, too.</p>

<!--more-->


<p>Can someone make a VM that&rsquo;s even smaller than an OSv one?  Looks like the answer is yes.</p>

<p><a href="http://www.qemu-advent-calendar.org/#day-10"><img src="http://osv.io/blog/images/day10.png" alt="day 10" /></a></p>

<p>Poor <a href="http://www.nyan.cat/original">Nyan Cat</a>, squashed to just 512 bytes (including a PC speaker version of the music) in the <a href="http://www.qemu-advent-calendar.org/#day-10">Day 10 download</a> from Max Reitz.  There&rsquo;s also vintage retrocomputing, some near-future 64-bit ARM action, and more.  Check it out: <a href="http://www.qemu-advent-calendar.org/">QEMU Advent Calendar</a>.</p>

<p>For the latest cloud and OSv news, subscript to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making Spam Vanish&hellip;in the CLOUD]]></title>
    <link href="http://osv.io/blog/blog/2014/12/04/spamsink/"/>
    <updated>2014-12-04T14:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/12/04/spamsink</id>
    <content type="html"><![CDATA[<p><strong>By Don Marti</strong></p>

<p>We knew that spammers control a lot of bandwidth, because botnets.  So, for a long time, people thought that fighting spam by just accepting and discarding huge amounts of it would be counterproductive. The spammers get bandwidth for free, and servers are expensive.</p>

<p>There have been some interesting
projects to
try to waste the spammer&rsquo;s bandwidth by fooling the sender into wasting precious bandwidth and CPU by forcing it to retransmit packets, reorder, and retransmit them.</p>

<p>For example, see <a href="http://www.spamcannibal.org/cannibal.cgi">Spam Cannibal</a>. Other spam tarpits focused on a different part of the spam problem: trapping the address-harvesting part of the spam operation.  Address generators would build a dynamic site which has an infinite hierarchy of random pages, each containing a few bogus email addresses and links to more of these fake pages.  An example is <a href="http://www.devin.com/sugarplum/">Sugarplum</a> by Devin Carraway.</p>

<p>Sugarplum created pages such as <a href="this%20randomly%20generated%20page">http://www.devin.com/peaches/lemons</a> and this <a href="http://www.devin.com/peaches/lemons/disentangles/fingerboard">directory of people who want to buy herbal weight loss products</a> (psst. humans. Not really, just more spamtrap addresses. Don&rsquo;t tell the address-harvesting bots.)</p>

<p>But in most cases, for a long time, our only hope for fighting spam was to batten down the hatches.  Assume that the spammers control more computing power and bandwidth than we do, and just do the best we can to filter it.</p>

<p><img src="http://osv.io/blog/images/vortex.jpeg" alt="vortex image" /></p>

<p>Is that the best we can do?</p>

<!--more-->


<h2>That was then, this is Cloud</h2>

<p>Is that still true?  Except in high-end &ldquo;fiberhoods,&rdquo; the bandwidth available to end-user machines is stagnant.  Especially upstream bandwidth.  And, much as we like to complain about the security situation on commodity operating systems, it is getting somewhat better.</p>

<p>And cloud computing continues to be built out everywhere.  Now, lots of people have access to cheap or even free cloud VMs.  If you have extra unused cloud capacity, you can use part of it as a spam sink.</p>

<h2>Do spammers still outnumber us?  Let&rsquo;s find out.</h2>

<p>This project is a simple way to build a stand-alone VM that accepts and drops all spam.</p>

<p>Got a free account on a cloud provider, or extra capacity on your hypervisor?   Run a spam sink.  (If you&rsquo;re a cloud provider, you can stick spam sinks on all your spare IP addresses.)</p>

<h2>How to use:</h2>

<ol>
<li><p>Build a spamsink VM with &ldquo;capstan build&rdquo; (You can get the Capstan VM-building tool from the <a href="Capstan%20project%20on%20GitHub">https://github.com/cloudius-systems/capstan</a>.</p></li>
<li><p>Deploy to your favorite private or public cloud.</p></li>
<li><p>Point some MX records and spamtrap addresses at it.  You can run Sugarplum (above) to generate as many random addresses as you want.</p></li>
</ol>


<h2>To try it out locally:</h2>

<p>Build and run: <code>capstan build &amp;&amp; capstan run -n bridge</code></p>

<p>OSv will print the IP address.  In another terminal, point the smtpsend client at it:</p>

<p><code>./smtpsend -n 100</code></p>

<h2>On GitHub</h2>

<p>A spamsink <a href="https://github.com/dmarti/spamsink">GitHub repository</a> is up.  Pull requests welcome.</p>

<p>For the latest cloud and OSv news, subscript to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>

<p><em>Vortex image: <a href="https://commons.wikimedia.org/wiki/File:Vortex_in_draining_bottle_of_water.jpg">Robert D Anderson for Wikimedia Commons</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Containers, Containers, Containers! More Options for the Cloud]]></title>
    <link href="http://osv.io/blog/blog/2014/12/02/docker-rocket/"/>
    <updated>2014-12-02T14:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/12/02/docker-rocket</id>
    <content type="html"><![CDATA[<p><strong>By <a href="https://twitter.com/DorLaor/">Dor Laor</a></strong></p>

<p>Everybody who uses containers has probably heard about <a href="https://coreos.com/blog/rocket">Rocket</a> by now. What does this <strike>fork</strike> re-implementation mean to the Docker community? Let’s dive in.</p>

<p>The Docker technology has disrupted the cloud and datacenter field for the past year. The speed of penetration was amazing and unmatched in the industry. I can’t think of a similar case for such fast-paced adoption of the concept. Neither AWS, OpenStack, nor virtualization were adopted that fast. What made it that attractive for our community to adopt?</p>

<p>Container technology was there for a lot of years. Even before containers, there has always been similar functionality, like Unix’s <code>chroot</code>. However, Docker really changed the game with straightforward simplicity and usability. Docker contributed the following:</p>

<ol>
<li><p> A basic one-liner command line: <code>docker run</code>. It masked out all of the LXC complexities and even downloaded the image if needed.</p></li>
<li><p>Straightforward image structure: It’s as simple as a directory.</p></li>
<li><p>A public image repository, <a href="https://hub.docker.com/">Docker Hub</a>, where you can stash your images for future download, and employ an application-market concept.</p></li>
</ol>


<p>Docker had become the hottest thing in tech, sometimes way too hot for reality (otherwise, why would one deploy Docker in a VM, incurring two tiers of management pain?). Beyond Google and AWS, even mighty Microsoft wanted a piece of the pie. We couldn’t believe our eyes, what an amazing meritocracy (no sarcasm). All the vendors of the world unite around one simple format.</p>

<p><img src="http://osv.io/blog/images/meritocracy.png" alt="" /></p>

<p>Yesterday CoreOS released a fork-like bomb in the form of Rocket. The reason
is the very thing that makes Docker attractive, its simplicity, is also a disadvantage since it’s too complex to harness for security, SLA and diverse workloads.  Apparently CoreOS didn’t manage to get the Docker team to change the mainline code for it.  I guess it’s more than a NIH thing (Not Invented Here) but some limitation of its structure.</p>

<p><img src="http://osv.io/blog/images/fight-time.png" alt="" /></p>

<p>This container diversity was expected although it saddens me to see it become an ugly fight:</p>

<p><img src="http://osv.io/blog/images/docker-thread.png" alt="Twitter thread" /></p>

<p>We believe that CoreOS has the upper hand when it comes to technology. Managing containers is straightforward, but these folks have the vehicle for deploying them. In addition they wrote cool distributed tools such as <code>etcd</code> and <code>fleet</code>. So while Docker controls the hub and the format, CoreOS leverages it to gain actual users (PR aside&hellip;)</p>

<p>There is nothing to fear about Docker momentum, but it has finally met a reality factor and such competition is positive for innovation and speed as well. With all the fuss around Docker, lots of good features like LXC SLA, and buildpacks (the way Heroku and Cloud Foundry handle them) were dropped in the race for Docker compatibility. It was a nice surprise to see that great minds think alike, and just as Rocket uses <a href="https://github.com/coreos/rocket">several phases</a> in container creation, we do the same for OSv. We create an image by spinning up an empty VM (on any given hypervisor) that formats our ZFS filesystem and afterwards listens on ‘nc’ (netcat) to receive a stream of files from the host.</p>

<p>One of the best things about OSv is that we enjoy the best of all worlds. On one hand, we are a library OS, as small as a single container, usually just a kernel, a runtime and an app. An OSv VM can weigh only 20MB, smaller than most containers. On the other hand, we leverage all of the hypervisor features, including live migration, multiple guest kernels on the same host, resource hotplug, isolation, SLA and more.</p>

<p>Let the battle continue as we collect the best of breed features and embrace them as we’ve done with <a href="http://osv.io/capstan/">Capstan</a>, with our <a href="http://osv.io/blog/blog/2014/08/28/wiki-watch-cloud-init/">cloud-init integration</a>, with our <a href="http://osv.io/manageability/">RESTful APIs</a> and more.</p>

<p><em>For the latest cloud and OSv news, subscript to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv Meetup at EBLUG: Intro Talk and Demo]]></title>
    <link href="http://osv.io/blog/blog/2014/11/17/eblug/"/>
    <updated>2014-11-17T16:54:23-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/17/eblug</id>
    <content type="html"><![CDATA[<p><strong>By Don Marti</strong></p>

<p><a href="http://osv.io/">OSv</a> is the simple, fast OS platform designed to run one application in the cloud, without the complexity of old-school OSs with their local users, permissions, and sevices.  Come see what it&rsquo;s all about, and enjoy free food and drink from East Bay LUG sponsor, Hurricane Electric.</p>

<p><a href="http://www.eblug.org/"><img src="http://www.eblug.org/images/eblugdev-logo-transparent-75px.png" alt="EBLUG logo" /></a></p>

<p><strong>Who:</strong> Don Marti, OSv demo monkey</p>

<p><strong>What:</strong> Introduction to OSv (with live 9-second build demo!)</p>

<p><strong>Where:</strong> <a href="http://www.eblug.org/index.html">East Bay LUG, Fremont, California, USA</a></p>

<p><strong>When:</strong> 7pm Wednesday, November 19, 2014</p>

<p><strong>Why:</strong>  See the new dedicated cloud OS, without the big travel budget</p>

<p>Please join us for the next <a href="http://www.eblug.org/index.html">EBLUG meeting</a>, co-located with the OSv <a href="http://www.meetup.com/OSv-Developer-Meetup/">Meetup group</a>, and get a rapid introduction to OSv, how it works, and where it&rsquo;s going.</p>

<p>If you&rsquo;re not already a member of the OSv <a href="http://www.meetup.com/OSv-Developer-Meetup/">Meetup group</a>, please join.  For general questions on OSv, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list</a>.  You can get general updates by subscribing to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Tip: Connecting to a Private Network Without Trusting the Bastion Host]]></title>
    <link href="http://osv.io/blog/blog/2014/11/17/ssh-without-trusting-bastion-host/"/>
    <updated>2014-11-17T14:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/17/ssh-without-trusting-bastion-host</id>
    <content type="html"><![CDATA[<p><strong>By Nadav Har&#8217;El</strong></p>

<p>In a typical lab network configuration, one cannot just <code>ssh</code> or <code>scp</code> to the hosts behind the firewall (our company calls them after characters from Norse mythology: Loki, Muninn and friends).  Instead, you need to ssh to a bastion host, and from there connect to the internal systems.</p>

<p><img src="http://osv.io/blog/images/ssh-user.jpeg" alt="ssh user" /><br><em>an ssh user connecting using a bastion host</em></p>

<p>One can automate these two steps, with a command like</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -t bastion.example.com ssh loki.lab.example.com</span></code></pre></td></tr></table></div></figure>


<p>And I guess some of you are already doing that. But this only works for ssh, not scp. One can do scp through an &ldquo;ssh tunnel&rdquo;, but this is really ugly to set up every time and to use.</p>

<p>There is also a securty hole in this approach, because anyone who breaks into <code>bastion</code> (which is an external machine and thus exposed to the Internet) can then ssh from there to all the internal machines, or even hijack already-running ssh sessions.</p>

<p>I finally found a much better solution, much easier to use and much more secure.</p>

<!--more-->


<p>Just add to your <code>~/.ssh/config</code> the following incantation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host *.lab
</span><span class='line'>        ProxyCommand ssh -q bastion.example.com nc `basename %h .lab` 22</span></code></pre></td></tr></table></div></figure>


<p>And now, you can <code>ssh</code> or <code>scp</code> directly to <code>loki.lab</code>, or <code>muninn.lab</code> or whatever, without any hassles, as if Loki and Muninn are actual machines on your LAN.</p>

<p>This trick works like this: To connect to the remote host, ssh normally just connects a socket to port 22 of the remote host. When the &ldquo;ProxyCommand&rdquo; is set, this command is used instead. The command above will ssh to <code>bastion.example.com</code> and from there connect (using <code>nc</code>) to loki&rsquo;s port 22. Your own ssh will do the ssh protocol with Loki over this connection.</p>

<p>This solution, beyond being extremely convenient, also has an interesting security feature:  we&rsquo;ll no longer need to trust <code>bastion.example.com</code>. The classic &ldquo;ssh from your laptop to <code>bastion</code> to <code>loki</code>&rdquo; solution suffered from a problem that if someone broke into <code>bastion</code>, they could also break into <code>loki</code> &ndash; by using the private keys stored on <code>bastion</code>, or by hijacking the second leg of the ssh chain (and possibly injecting whatever commands it wanted into this session!). With this new solution, <code>bastion</code> is just acting as a stupid pipe for encypted data between my laptop and Loki &ndash; it cannot hijack the connection, and it doesn&rsquo;t have any private keys needed to initiate a connection to Loki on its own.</p>

<p>For more tips and OSv news, subscript to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>

<p><strong>Photo:</strong> <a href="http://www.flickr.com/photos/dfectuoso17/7013054091/">Security Hacker</a> by Santiago Zavala</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv Early Access Private Beta]]></title>
    <link href="http://osv.io/blog/blog/2014/11/13/osv-private-beta/"/>
    <updated>2014-11-13T08:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/13/osv-private-beta</id>
    <content type="html"><![CDATA[<p>Cloudius Systems is introducing an early access version of OSv, the lightweight open-source OS optimized for large cloud workloads, on November 13.  <a href="http://osv.io/beta-release/">Beta program information</a> is now available.</p>

<p><img src="http://www.cloudius-systems.com/images/mouse.jpeg" alt="lab mouse" /></p>

<p>OSv can be used to minimize latency and reduce TCO for many workloads, especially horizontally scaled ones. The software is available as ready-to-run virtual machine images pre-configured to run popular NoSQL data stores such as Redis and Apache Cassandra, as well as in source code form.</p>

<p>“OSv lets you take a project from a developer’s IDE to a flexible, multi-server deployment much faster,” said Dor Laor, CEO of Cloudius Systems.  “As customers require more and more throughput at lower and lower operating cost, we enable developers to use the agility of containers along with the proven security and management features known for in virtual machines.”</p>

<p>Cloudius Systems’ early access release features an expanded Web API for management, along with performance improvements that increase efficiency, with an up to a 3.9x throughput gain. Unlike conventional operating systems with their diverse configuration files and complex user and memory management, OSv is designed to provide the minimum OS needed to run a single application at maximum performance in the cloud.</p>

<p>&ldquo;OSv was designed with virtualization in mind,” said Cloudius Systems CTO, Avi Kivity.  “The OS overhead is minimized by a reduction of context switches, data copies, and inefficient constructs such as spinlocks.&rdquo; OSv virtual machines can be as small as 20MB, far smaller than Docker containers, and boot in less than one second.</p>

<h2><a href="http://www.cloudius-systems.com/images/mouse.jpeg">Sign up for the OSv beta</a></h2>

<p>You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.  Hope to see you at the show.</p>

<p>Photo: <a href="http://commons.wikimedia.org/wiki/File:Lab_mouse_mg_3216.jpg">Rama for Wikimedia Commons</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Stage Thursday at Amazon re:Invent]]></title>
    <link href="http://osv.io/blog/blog/2014/11/12/amazon/"/>
    <updated>2014-11-12T08:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/12/amazon</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re at the Amazon re:Invent show, don&rsquo;t miss <a href="https://www.portal.reinvent.awsevents.com/connect/sessionDetail.ww?SESSION_ID=9806">3rd Annual Startup Launches moderated by Werner Vogels</a>. Cloudius Systems CEO Dor Laor will be there, to talk about&hellip;.but we can&rsquo;t tell you that yet.</p>

<ul>
<li><p><strong>Who:</strong> Amazon.com CTO, Dr. Werner Vogels. and five guests</p></li>
<li><p><strong>What:</strong> Learn how innovative new startups use the AWS cloud.</p></li>
<li><p><strong>Where:</strong> Level 2 &ndash; Titian 2306</p></li>
<li><p><strong>When:</strong> Thursday, Nov 13, 4:30 PM &ndash; 5:15 PM</p></li>
<li><p><strong>Why:</strong> Knowledge, plus special discounts on new products and services.</p></li>
</ul>


<p>If you can&rsquo;t wait, come over to K14 in the exhibit hall for an OSv demo.
We&rsquo;ve got some <a href="http://www.mcmelectronics.com/product/83-16333RK">Raspberry Pi media kits</a> to give away (to especially intense cloud users who need some real hardware to restore balance to their lives.)</p>

<p><img src="http://osv.io/blog/images/kiosk.png" alt="demo pod" /><br><em>Unikernels don&rsquo;t need big heavyweight booths.</em></p>

<p>You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.  Hope to see you at the show.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi at Amazon Re:invent]]></title>
    <link href="http://osv.io/blog/blog/2014/11/09/rpi/"/>
    <updated>2014-11-09T11:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/09/rpi</id>
    <content type="html"><![CDATA[<p>Want to see us build a virtual machine for the Amazon cloud at the <a href="https://reinvent.awsevents.com/">re:Invent show</a>?  Come on over to our booth (K14) and we&rsquo;ll show you.  It&rsquo;s simple to add a virtual appliance build step to any application build.</p>

<p>Well, that took nine seconds.  What else can we do?  How about a hardware giveaway?  Since your virtual machines are going to take so little of your time, you should have plenty of time to play with a fun hardware kit.</p>

<p><img src="http://osv.io/blog/images/rpi.jpeg" alt="Raspberry Pi media kit" /></p>

<p>We&rsquo;ve got some <a href="http://www.mcmelectronics.com/product/83-16333RK">Raspberry Pi media kits</a> to give away.  Not just the board, this kit includes</p>

<ul>
<li><p>Raspberry Pi Model B+ Board</p></li>
<li><p>8GB Operating System microSD Card</p></li>
<li><p>Multicomp Black B+ Case</p></li>
<li><p>Raspberry Pi Power Supply</p></li>
<li><p>Wi-Pi Wireless Adapter</p></li>
<li><p>3&#8217; HDMi Cable</p></li>
<li><p>7&#8217; Ethernet Cable</p></li>
</ul>


<p>Just the thing for a home media center, or a starting point for a more ambitious project such as a <a href="http://www.retrobuiltgames.com/porta-pi-arcade-help/porta-pi-software-os-download/">vintage arcade</a>.</p>

<p>Amazon re:Invent is sold out, but you can <a href="http://reinvent.awsevents.com/livestream-reg.html">sign up for streaming</a> if you&rsquo;re not able to make it.</p>

<p>You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.  Hope to see you at the show.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv 0.14 Alpha Includes Management Dashboard]]></title>
    <link href="http://osv.io/blog/blog/2014/11/03/dashboard/"/>
    <updated>2014-11-03T21:10:31-08:00</updated>
    <id>http://osv.io/blog/blog/2014/11/03/dashboard</id>
    <content type="html"><![CDATA[<p><strong>By Tzach Livyatan</strong></p>

<p>We are pleased to announce the OSv 0.14 Alpha Release.</p>

<p>This is the first release to include the dashboard, a  browser-based UI for OSv and virtual appliance status.</p>

<p><img src="http://osv.io/images/dashboard.png" alt="OSv dashboard" /></p>

<p>The dashboard includes (among other features):</p>

<ul>
<li><p>Main tab with Memory, CPU, Disk</p></li>
<li><p>Thread tab with interactive visualization of thread status and thread usage.
You can select and search for particular thread by name.</p></li>
<li><p>Trace tab, including frequency for each tracepoint. Selection by name and search are available.</p></li>
<li><p>JVM tab for basic JVM information including memory and GC, when a JVM is installed.</p></li>
<li><p>Virtual Appliance tab for information relevant to the particular appliance.
Tabs for Cassandra and Tomcat are currently  available, with more to come.</p></li>
</ul>


<p>To build the dashboard, just includes httpserver in
the module list.  For example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ make -j 4 image=cassandra,httpserver</span></code></pre></td></tr></table></div></figure>


<p>Once the appliance is running, the dashboard is available on port 8000 by default.  (You can change the port using <a href="https://github.com/cloudius-systems/osv/wiki/cloud-init">cloud-init</a>.)</p>

<p>The <a href="https://groups.google.com/forum/#!topic/osv-dev/tyFGw7NRudA">full 0.14 release announcement</a> is available on the osv-dev mailing list.
You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Cloud Wake-up Call]]></title>
    <link href="http://osv.io/blog/blog/2014/10/03/cloud-reboot/"/>
    <updated>2014-10-03T17:54:23-07:00</updated>
    <id>http://osv.io/blog/blog/2014/10/03/cloud-reboot</id>
    <content type="html"><![CDATA[<p><strong>By Dor Laor</strong></p>

<p>If you use AWS or Rackspace, there is a good chance that you got affected by <a href="https://gigaom.com/2014/09/24/yikes-big-amazon-web-services-reboot-on-the-way/">cloud-reboot</a>. Ten percent of AWS machines were forced to reboot during the weekend period due to a simple bug that created a security vulnerability. The reboot could have been prevented/mitigated through the use of sophisticated but handy tools. Such tools have existed for years but few people use them.</p>

<p>Let’s take a closer look at the particular problem and proceed toward a call for action for usage of additional, fantastic low-level features that are hardly being used by IaaS/PaaS vendors.</p>

<p>The cloud-reboot trigger is a tiny off-by-12kb xen hypervisor bug. A simple Model Specific Register check had a wrong limit as you can observe in the
<a href="http://xenbits.xen.org/xsa/xsa108.patch">fix</a> for the <a href="http://xenbits.xen.org/xsa/advisory-108.html">security vulnerability</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-    case MSR_IA32_APICBASE_MSR ... MSR_IA32_APICBASE_MSR + 0x3ff:
</span><span class='line'>+    case MSR_IA32_APICBASE_MSR ... MSR_IA32_APICBASE_MSR + 0xff:</span></code></pre></td></tr></table></div></figure>


<p>The vulnerability allows an attacker to either crash the hypervisor or retrieve data about other tenants. It’s really a long shot since the memory probably belongs to Xen addresses but in theory one can get lucky and read someone else’s passwords/keys.</p>

<p>Kudos to Amazon and Rackspace for being on the safe side. The fix is a huge hassle and pain for such a small chance of being successfully targeted. Kudos for Xen (and the other hypervisor vendors) for developing mature hypervisors that these events are that rare.</p>

<p>Now how could an IaaS vendor mitigate the problem without a reboot?</p>

<h2>Option #1 &ndash; Dynamic Code Patching</h2>

<p>Dynamic code patch technology for running-code has been available for years. Initially it was <a href="http://en.wikipedia.org/wiki/Ksplice">KSplice</a>, and
that was recently followed by <a href="https://github.com/dynup/kpatch">KPatch</a>. Lean cloud providers <a href="https://twitter.com/extramsp/status/18715823586">reported KSplice deployment for Xen 4 years ago!</a></p>

<p><img src="http://osv.io/blog/images/extramsp.png" alt="Cloud provider announces Ksplice support, on Twitter" /></p>

<p>XSA-108, the cloud-reboot bug, could have been the perfect candidate for this.
Hold your horses; Ksplice probably hadn’t been integrated to Xen and Ksplice is only applicable to dom-0. However, didn’t they see it coming? Now 10% of the Internet needs a reboot because no one picked it up. Let’s see whether a quick developer group will come to the rescue.  Ouch.</p>

<h2>Option #2 &ndash; Live migration</h2>

<p>Look ma, no hands&hellip;live migrate the VMs from an old hypervisor version to a patched hypervisor without service interruption.</p>

<p>At Red Hat, I managed the KVM and Xen development teams. We were heavily invested in live migration development. A great deal of thought was given to cross-release migration, resulting in the ability to migrate a VM running on KVM version x to version x+y.  Sometimes even the opposite direction was allowed. We maintained a huge matrix of migration options which included the preservation of the virtual-hardware version. This means that a KVM hypervisor can represent a variety of virtual-hardware versions (combo of cpu+devices) and keep the ABI (Application Binary Interface) compatible across KVM releases and live migration events.</p>

<p>Live migration was constantly optimized to reduce the effect on the running-workloads as well as to minimize downtime to few msecs. Smart compression, hot-page-transfer prioritization, and even more adventurous post-copy migration were deployed.</p>

<p>To my surprise, several years and millions of hypervisors later, most cloud providers do not implement live migration. That’s rather unfortunate for a couple of reasons:</p>

<ul>
<li><p><strong>Live migration allows maintenance mode.</strong> The host can be taken down while the VMs are being migrated to a different host</p></li>
<li><p><strong>Dynamic load balancing</strong> It’s possible to over-provision resources such as cpu, network, memory, etc in order to increase virtual server density. In case of load, live migrate VMs balance the host resources. Over-provisioning can reduce the cloud-bills dramatically; for a theoretical example, check the cost of a <a href="http://aws.amazon.com/ec2/instance-types/">t2-micro</a> instance.</p></li>
</ul>


<p>A leading cloud provider does use live migration, mainly because it uses shared storage for the VMs and the migration is just about the VM RAM. Other IaaS vendors use local storage but the &lsquo;excuse&rsquo; does not hold since for long it is possible to live migration local storage too . Sophisticated scenarios are supported; for example, a VM template image can reside on shared storage. There is no need to copy the image to the local disk when the VM is provisioned. Instead, the VM starts execution locally while its disk is remote. On the fly the disk requests are served from the network while a background task transfers the entire disk to the local hypervisor. In a similar way, live migration of a VM with local storage can takes place.</p>

<p>Even open source projects such as Openstack and CloudFoundry do not support live migration. After all the time and effort invested in capturing the state of the virtual machine hardware state, it’s pretty sad that the feature isn’t enabled in practice and only data center solutions like vCenter and RHEV support it. Just to finalize this rant, please allow me to enclose the type of data a live migration captures:</p>

<ul>
<li>Complete configuration of the virtual hardware setup</li>
<li>State of all CPU registers (General purpose, FPU, SIMD, MSRs,..)</li>
<li>State of the interrupt controllers</li>
<li>State of the disk drive (Registers, in-flight IO, interrupts)</li>
<li>State of the network cards (Registers, in-flight IO, interrupts)</li>
<li>State of all other devices &ndash; keyboard, mouse, USB, GPU, etc</li>
</ul>


<p>Modern hypervisors manage to deal with the above complexity and send GBs of data underneath the guest execution. In turn, the cloud management software needs only to find a target host and evacuate the source host (in the case of hardware/software maintenance or a bit more sophisticated for load balancing needs). This is a fair deal, now please, go implement it.</p>

<h2>&lt;wake up call continues></h2>

<p>Since I started with two important OS features that aren’t implemented (dynamic patching and live migration), let me add to the list the following:</p>

<ul>
<li><strong>Hot (un) plug of memory and cpu</strong> This is a pure scale-up scenario. You start a small VM and if there is a need, add virtual CPUs and/or memory to the mix. Most OS’s and hypervisors support it.  Imagine you run a c3.8xlarge during the day, and at night you unplug resources to form a c3.large VM which costs 1/16 as much.</li>
</ul>


<p>Imagine you’re running a JVM application that needs an immediate garbage collection (GC). Today, the application will experience a Stop-The-World phase which will translate into downtime that can go up to several seconds (a function of heap size).  Instead, such a VM can ask to hot plug additional RAM and CPUs 1 second before it really needs to pause. The JVM may use even a silly copy garbage collector to copy the live objects from the original RAM block to newer hotplugged-RAM blocks and unplug the old block entirely (using the extra vCPUs to accelerate the action).</p>

<ul>
<li><p><strong>Trusted boot/computing</strong> Trusted Computing is a technology to keep the integrity of an operating system, which is based on a secure chip such as “TPM (Trusted Platform Module)” and/or Intel’s TXT technology: Trusted Execution Technology provides a hardware based root of trust to ensure that a platform boots with a known good configuration of firmware, BIOS, virtual machine monitor, and operating system, forming a fully signed and secure stack.</p></li>
<li><p><strong>Fast VM provision time</strong> <a href="http://osv.io/">OSv</a> boots in under 1 second! However it takes significantly more time to provision a VM.  If the hypervisor and the OS can boot that fast, I see no reason for the hypervisor management code to be slower.</p></li>
</ul>


<h2>&lt;/wake up call continues></h2>

<p>Enough rants for one day, now let’s get back to <a href="https://twitter.com/search?q=%23osv">#OSv</a> and make it shine some more.</p>

<p><em>For more info on OSv, please follow <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merge the OS Into Your App, Not the Other Way Around!]]></title>
    <link href="http://osv.io/blog/blog/2014/09/26/ant/"/>
    <updated>2014-09-26T11:54:23-07:00</updated>
    <id>http://osv.io/blog/blog/2014/09/26/ant</id>
    <content type="html"><![CDATA[<p><strong>By Glauber Costa</strong></p>

<p>Don Marti and I will soon be presenting OSv at <a href="http://osv.io/blog/blog/2014/09/25/javaone/">JavaOne</a>. We are excited about
the conference, and thought we could give you a small preview of what we will
be talking about.</p>

<p>As you already know, OSv is at the same time an operating system, and a
library. It is as functional as an operating system, and as invisible as a
library. This means that you shouldn&rsquo;t really install your app into OSv, but
rather, merge them both naturally as a single entity.</p>

<p>If you are using Java, there is a huge chance that one way or another, your
project is built through Apache Ant, or similar tool.</p>

<p>If you have Capstan, our image building tool, that merges nicely and
beautifully with your Ant-based build process. Here is how:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;property name="hypervisor" value="qemu"/&gt;
</span><span class='line'>&lt;basename property="vm-name" file="${basedir}"/&gt;
</span><span class='line'>&lt;property name="capstanpath"
</span><span class='line'>   value="${user.home}/.capstan/repository/${vm-name}"/&gt;
</span><span class='line'>
</span><span class='line'>&lt;target name="vm" depends="jar"&gt;
</span><span class='line'>&lt;echo file="Capstanfile" append="false"&gt;
</span><span class='line'>base:
</span><span class='line'>   cloudius/osv-openjdk
</span><span class='line'>cmdline:
</span><span class='line'>  /java.so -jar ${jarname}
</span><span class='line'>files:
</span><span class='line'>  /${jarname}: build/jar/${jarname}&lt;/echo&gt;
</span><span class='line'>&lt;exec executable="capstan"&gt;
</span><span class='line'>    &lt;arg value="build"/&gt;
</span><span class='line'>    &lt;arg value="-p"/&gt;
</span><span class='line'>    &lt;arg value="${hypervisor}"/&gt;
</span><span class='line'>&lt;/exec&gt;
</span><span class='line'>&lt;copy tofile="HelloWorld.${hypervisor}"
</span><span class='line'>   file="${capstanpath}/${vm-name}.${hypervisor}"/&gt;
</span><span class='line'>&lt;delete file="Capstanfile"/&gt;
</span><span class='line'>&lt;/target&gt;</span></code></pre></td></tr></table></div></figure>


<p>The snippet above assumes that you already have a &ldquo;jar&rdquo; target in your build.</p>

<p>As you can guess from the image name, this example is a simple HelloWorld.  The
code, together with the complete build.xml file, can be downloaded
<a href="https://github.com/dmarti/OSvJavaOneDemo.git">on GitHub</a>.</p>

<p>Adding that step to your existing build environment, allows you to have a first-class VM in a format consumable by QEMU/KVM. Booting in your hypervisor
of choice, becomes just a matter of editing the file for the correct format.</p>

<p>And after that? Fire up Capstan and enjoy your VM!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[glauber@localhost JavaOne]$ capstan run JavaOne
</span><span class='line'>Created instance: JavaOne
</span><span class='line'>OSv v0.12
</span><span class='line'>eth0: 192.168.122.15
</span><span class='line'>Hello World</span></code></pre></td></tr></table></div></figure>


<p>Alternatively, boot the HelloWorld.qcow2 image that was copied to the local
directory, with any tool you want.</p>

<p><strong>More info</strong></p>

<p>Are you attending JavaOne? We will show you this and more, at <a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=4120">Parc 55 &ndash; Powell I/II, Tuesday the 30th (12:30 PM)</a></p>

<p>For general questions on OSv, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list</a>.  You can get general updates by subscribing to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSv at JavaOne]]></title>
    <link href="http://osv.io/blog/blog/2014/09/25/javaone/"/>
    <updated>2014-09-25T17:10:31-07:00</updated>
    <id>http://osv.io/blog/blog/2014/09/25/javaone</id>
    <content type="html"><![CDATA[<p><img src="http://osv.io/blog/images/speaking-at-javaone.jpg" alt="speaking at JavaOne" /></p>

<p>Glauber Costa and Don Marti are speaking at the JavaOne conference in San Francisco, on Tuesday, September 30.  Hope to see you there.</p>

<p><a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=4120">OSv: The Operating System Designed for Java and the Cloud</a></p>

<p>Here&rsquo;s what you&rsquo;re in for:</p>

<blockquote><p>A lot of the cloud discussion centers around which hypervisors are the best and which management tools will simplify our life the most. But is it the whole story? When problems are addressed from the lower and higher layers, the middleman—the guest operating system—is usually left behind. This changes with OSv, an operating system designed from the ground up to run Java applications in the cloud. OSv is a library OS. Therefore, you can think of using it as being a way to boot a JVM directly into the cloud. Forget OS management: it’s your application and the end of the story. Besides explaining the architecture, this presentation demonstrates how designing an OS with Java in mind can benefit the Java ecosystem.</p></blockquote>

<p>We&rsquo;ll demonstrate a nine-second build of a VM from a Java project.  Hope to see you there.</p>

<p>You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shellshock]]></title>
    <link href="http://osv.io/blog/blog/2014/09/25/shellshock/"/>
    <updated>2014-09-25T15:54:23-07:00</updated>
    <id>http://osv.io/blog/blog/2014/09/25/shellshock</id>
    <content type="html"><![CDATA[<p><strong>By Tzach Livyatan</strong></p>

<p>A new bash bug is &lsquo;bigger than Heartbleed&rsquo; and puts millions of websites.
In short, Shellshock can take advantage of any server which call Bash.
You can find a good insight into Shellshock <a href="http://lcamtuf.blogspot.co.il/2014/09/quick-notes-about-bash-bug-its-impact.html">on Michal Zalewski&rsquo;s blog</a>.</p>

<p>A Bash patch is already available, but there is a bigger question:
Why do you want  Bash on a production server in the first place?
By its nature Bash is a dangerous beast, wouldn&rsquo;t it be better to keep him on the cage and off your system?</p>

<p>What did you say?</p>

<p>&ldquo;I need my Bash for troubleshooting?&rdquo;</p>

<p>Do you now?</p>

<!-- more -->


<p>I assume your production server already writes logs and send traps to to a remote machine.
If not, you probably do not have many production servers.
What if in addition you had a secure remote REST API which allows you to probe files, get traces and any other information element you need?
Do you still need Bash?
And if you don&rsquo;t, than wouldn&rsquo;t it be better not to have it on the first place?</p>

<p>Don Marti <a href="http://osv.io/blog/blog/2014/09/25/security-is-a-journey-not-a-destination/">writes</a> that the need for fast, reliable VM builds is the important lesson from this bug, but I disagree. Why not just remove the shell from the server?</p>

<p>OSv takes a different approach from other OSs on the subject.
Recognizing that most cloud servers only run one application, it is designed to run one and only one process.
Every interaction with OSv is done via a set of REST APIs, over SSL.
You can find the <a href="http://osv.io/api/swagger-ui/dist/index.html">current list of supported endpoints</a> on the OSv site.
Since <code>fork</code> is inherently not allowed, there is not way for a Shellshock-like bug to exist.
Sure, bugs in OSv may still lead to code injection via the API, but the surface of attack is much smaller, and dangerous APIs can be easily disabled.
OSv still supports a CLI, but its run outside the OS, and administrators can use the secure API to access it, just like everybody else.</p>

<p><strong>More info</strong></p>

<p>For general questions on OSv, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list</a>.  You can get general updates by subscribing to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waking Up Late, After Bash Fixing Night]]></title>
    <link href="http://osv.io/blog/blog/2014/09/25/security-is-a-journey-not-a-destination/"/>
    <updated>2014-09-25T13:54:23-07:00</updated>
    <id>http://osv.io/blog/blog/2014/09/25/security-is-a-journey-not-a-destination</id>
    <content type="html"><![CDATA[<p><strong>By Don Marti</strong></p>

<p>Yesterday we found out about <a href="https://lwn.net/Articles/613032/">a remotely exploitable hole in bash</a> from our favorite Linux news sites.  For some of us, our schedules on the night of September 24th were disrupted, and not in a good way.</p>

<p>It&rsquo;s true that my own Internet-facing code, while not perfect, isn&rsquo;t vulnerable.  But for one older web-based application I have to deal with, it&rsquo;s faster to install a new version of Bash than to trace through the code to make sure it isn&rsquo;t doing something bad, somewhere.</p>

<p>Clearly this particular bug isn&rsquo;t a problem on OSv, because OSv doesn&rsquo;t run Bash.  The whole point of Bash is to <code>fork()</code> and <code>exec()</code> other processes, and OSv doesn&rsquo;t do all that.  Everything runs in one process, with no shell available or needed.</p>

<p>As <a href="http://osv.io/blog/blog/2014/09/25/shellshock/">Tzach Livyatan points out</a>, managing OSv doesn&rsquo;t require a shell either.  There&rsquo;s one REST API for everything, from VM basics such as CPU and memory usage, up to <a href="http://osv.io/blog/blog/2014/08/26/jolokia-jmx-connectivity-in-osv/">JMX data from the application</a>.</p>

<p>But it looks like Tzach is missing the main point.</p>

<!-- more -->


<p>The problem isn&rsquo;t so much that someone discovered a bug in Bash.  The problem is <em>what happened to the evening of September 24, 2014</em>?  A software bug should be something that you fix, test, check in the fix, and go home, not a full <a href="http://www.tor.com/stories/2009/12/overtime">night on duty</a>.</p>

<p>I&rsquo;m starting to think that what&rsquo;s more important than any design advantages of OSv is the flow that it enables.   The size and, more important, simplicity of an OSv VM means that regenerating one is a matter of, let me time it&hellip; 9 seconds.  An OSv VM is a build artifact that I can crank out of my regular build system.</p>

<p>It would be full of security hubris to say that OSv will never have to issue a security fix.  Yes, there are many fewer lines of code, and yes, the C++ experts on the development team will point to shorter, clearer programming constructs in which fewer old-school bugs can hide.  But every software project has to issue a fix sometimes.</p>

<p>The question is how long it takes to get current and put the bug behind you.</p>

<p><strong>Repeatable flow, from commit to deploy</strong></p>

<p>At <a href="https://oracleus.activeevents.com/2014/connect/sessionDetail.ww?SESSION_ID=4120">JavaOne next week</a>, Glauber Costa and I will be speaking about <q>OSv: The Operating System Designed for Java and the Cloud</q>.  Glauber summed it up: <q>OSv is a library OS. Therefore, you can think of using it as being a way to boot a JVM directly into the cloud. Forget OS management: it’s your application and the end of the story.</q></p>

<p>The <a href="https://www.gartner.com/doc/2831925/make-sdlc-agile-using-cloud">complexity of maintaining conventional OS environments</a> looks like just a time-suck for developers, not a big problem.  But simplicity matters on a Big Security Day.</p>

<p><strong>More info</strong></p>

<p>For general questions on OSv, please join the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev mailing list</a>.  You can get general updates by subscribing to this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or folllowing <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding a NewRelic Agent to Your OSv Appliance]]></title>
    <link href="http://osv.io/blog/blog/2014/09/24/java-newrelic-agent/"/>
    <updated>2014-09-24T16:22:22-07:00</updated>
    <id>http://osv.io/blog/blog/2014/09/24/java-newrelic-agent</id>
    <content type="html"><![CDATA[<p><strong>By Tzach Livyatan</strong></p>

<p><a href="http://newrelic.com/">New Relic</a> is a popular real-time monitoring
service for Web and mobile applications.</p>

<p>In the following post I will describe how to add a New Relic
monitoring agent to your OSv virtual appliance, using <a href="http://tomcat.apache.org/">Tomcat</a> as an
example.</p>

<!-- more -->


<p>As first step, go to the <a href="http://newrelic.com/">New Relic web site</a> and log in  or open an account.  Following the instructions on the site, you should be prompted to download two files:</p>

<ul>
<li>newrelic.yml</li>
<li>newrelic.jar</li>
</ul>


<p>newrelic.yml should already have the your license key in it.
If you downloaded the file
<a href="http://download.newrelic.com/newrelic/java-agent/newrelic-agent/3.10.0/newrelic.yml">directly</a>,
you should make sure to edit the license line.
Make sure to update your application name in the same file. This name
will be used in the New Relic GUI.</p>

<p>There are two ways to build an OSv appliance:</p>

<ol>
<li>Using an OSv build from source</li>
<li>Using <a href="https://github.com/cloudius-systems/capstan">Capstan</a></li>
</ol>


<p>The first requires cloning OSv source code with Git, as described
<a href="https://github.com/cloudius-systems/osv-apps/tree/master/java-newrelic">here</a>.
The second assumes you are familiar with <a href="https://github.com/cloudius-systems/capstan">Capstan</a> and is described below.</p>

<h3>Using Capstan to add a NewRelic Agent</h3>

<ul>
<li>Create a new project directory</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir my-tomcat-with-newrelic
</span><span class='line'>cd my-tomcat-with-newrelic</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Copy newrelic.jar and newrelic.yml to this location</li>
<li>Create a new <a href="https://github.com/cloudius-systems/capstan/blob/master/Documentation/Capstanfile.md">Capstanfile</a> with the following contents:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>base: cloudius/osv-tomcat
</span><span class='line'>
</span><span class='line'>cmdline: &gt;
</span><span class='line'>  /java.so
</span><span class='line'>  -javaagent:/tools/newrelic.jar
</span><span class='line'>  -cp /usr/tomcat/bin/bootstrap.jar:/usr/tomcat/bin/tomcat-juli.jar
</span><span class='line'>  -Djava.util.logging.config.file=/usr/tomcat/conf/logging.properties
</span><span class='line'>  -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
</span><span class='line'>  -Dcatalina.base=/usr/tomcat
</span><span class='line'>  -Dcatalina.home=/usr/tomcat
</span><span class='line'>  -Djava.io.tmpdir=/usr/tomcat/temp
</span><span class='line'>  org.apache.catalina.startup.Bootstrap
</span><span class='line'>  start
</span><span class='line'>
</span><span class='line'>files:
</span><span class='line'>  /tools/newrelic.jar: newrelic.jar
</span><span class='line'>  /tools/newrelic.yml: newrelic.yml</span></code></pre></td></tr></table></div></figure>


<p>The base OSv image is <code>tomcat</code>, the cmdline include both Tomcat and
  New Relic options, and the files are the two New Relic files: the JAR and the configuration file.</p>

<ul>
<li>build the image</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>capstan build</span></code></pre></td></tr></table></div></figure>


<p>You are done! you now have a ready VM with Tomcat and a New Relic agent.
To run the image locally:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>capstan run -n bridge</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Go to the New Relic web app, monitor your application, and give yourself a
pat on the shoulder :)</li>
</ul>


<p>You can keep up with the latest OSv news from this blog&rsquo;s <a href="http://osv.io/blog/atom.xml">feed</a>, or by following <a href="https://twitter.com/CloudiusSystems">@CloudiusSystems</a> on Twitter.  Questions always welcome on the <a href="https://groups.google.com/forum/#!forum/osv-dev">osv-dev</a> mailing list.</p>
]]></content>
  </entry>
  
</feed>
